// <auto-generated />
using Chat.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chat.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250512231720_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Chat.Models.Conversacion", b =>
                {
                    b.Property<int>("id_Conversacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Emisor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_remitente")
                        .HasColumnType("INTEGER");

                    b.HasKey("id_Conversacion");

                    b.HasIndex("Id_Emisor");

                    b.HasIndex("id_remitente");

                    b.ToTable("Conversaciones");
                });

            modelBuilder.Entity("Chat.Models.Mensaje", b =>
                {
                    b.Property<int>("id_mensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Conversacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_user")
                        .HasColumnType("INTEGER");

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id_mensaje");

                    b.HasIndex("Id_Conversacion");

                    b.HasIndex("Id_user");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("Chat.Models.User", b =>
                {
                    b.Property<int>("Id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("contra")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_user");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Chat.Models.Conversacion", b =>
                {
                    b.HasOne("Chat.Models.User", "Emisor")
                        .WithMany("ConversacionesEnviadas")
                        .HasForeignKey("Id_Emisor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chat.Models.User", "Receptor")
                        .WithMany("ConversacionesRecibidas")
                        .HasForeignKey("id_remitente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Emisor");

                    b.Navigation("Receptor");
                });

            modelBuilder.Entity("Chat.Models.Mensaje", b =>
                {
                    b.HasOne("Chat.Models.Conversacion", "conversacion")
                        .WithMany("Mensajes")
                        .HasForeignKey("Id_Conversacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chat.Models.User", "user")
                        .WithMany("Mensajes")
                        .HasForeignKey("Id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("conversacion");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Chat.Models.Conversacion", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("Chat.Models.User", b =>
                {
                    b.Navigation("ConversacionesEnviadas");

                    b.Navigation("ConversacionesRecibidas");

                    b.Navigation("Mensajes");
                });
#pragma warning restore 612, 618
        }
    }
}
